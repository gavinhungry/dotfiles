[include]
  path = ~/.gitconfig.local
[commit]
  template = ~/.gitmessage
[color]
  ui = true
[pull]
  ff = only
[push]
  default = simple
[log]
  date = iso-local
  showSignature = true
[pager]
  branch = false
[alias]
  git-all = !sh -c 'find -L . -maxdepth $1 -type d -name .git ! -path ./.git | xargs -P$2 -I{} "git -C {}/.. ${@:3}"' -
  all = git-all 2 8
  all-one = git-all 2 1
  deep = git-all 16 8
  deep-one = git-all 16 1
  edit = !sh -c 'edit $(git ls-files -m)'
  br = !sh -c 'git rev-parse --abbrev-ref HEAD 2> /dev/null' -
  changed = diff-tree --no-commit-id --name-only -r
  clip = "!git log -n1 --pretty=%B | xclip -selection c"
  df = !sh -c 'cd "${GIT_PREFIX:-.}" && git diff -U$(wc -l < "$1") "$1"' -
  gr = "!git --no-pager grep"
  melog = "!git log --author=$(git config user.email) $@"
  origin = remote get-url origin
  pluck = "!sh -c 'DIR=$(basename \"${1%%.git*}\" 2> /dev/null); [ -n \"$DIR\" ] || exit 1; mkdir \"$DIR\" || exit 1; git -C \"$DIR\" init > /dev/null; git -C \"$DIR\" config core.sparseCheckout true; git -C \"$DIR\" remote add origin \"$1\"; echo \"$2\" >> \"$DIR\"/.git/info/sparse-checkout; git -C \"$DIR\" pull origin master --depth 1 || (rm -fr \"$DIR\"; exit 1)'" -
  rb = !sh -c 'git rebase -i HEAD~$1' -
  remotes = "!git remote -v | awk \"{ print \\$1OFS\\$2 }\" | sort -u | column -t"
  show-patch = "!git format-patch -1 $1 --stdout"
  sign = commit --amend --no-edit -S
  user = "!sh -c \"if [ $# -ne 1 ]; then echo "$(git config user.name) \\<$(git config user.email)\\>"; exit 0; fi; git config user.email "$(git config gituser.$1.email)" &> /dev/null; git user;\" --" -
  who = shortlog -ns
